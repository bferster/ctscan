<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<meta http-equiv="x-ua-compatible" content="ie=edge">
	<script src="lib/jquery.min.js"></script>
 	<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  	<link REL="SHORTCUT ICON" HREF="img/favicon.ico">
	<title>CTScan Timeline</title>

	<style type="text/css">
		 
		 body { 			font-family: Verdana,Geneva,sans-serif; font-size:13px; box-sizing: border-box;
							padding: 0px; margin: 0px; 
							}
		.ct-mainPanel {		background-color:#eee; border-radius: 6px; margin-top: 16px; padding: 12px; max-width: 1200px;
							margin-left: auto; margin-right: auto; opacity: 0;
							}
		.ct-chartPanel {	background-color:#fff; margin-top: 16px; max-width:1200px; margin-left: auto; margin-right: auto; opacity: 0; 
							font-size: 12px; padding-bottom:0px
							}
		.ct-chart {			display: inline-block; width:24.5%
							}
		.ct-dataPanel {		background-color:#fff; max-width:1200px; margin-left: auto; margin-right: auto; opacity: 0; 
							max-height: 2000px;  overflow-y:auto;
							}
		.ct-timePanel {		border-radius: 6px; background-color:#fff;  overflow-x:auto; margin-left:120px;
							}
		.ct-is 	{			border-radius:4px; padding-left:8px; border: 1px solid #999; margin-bottom: 3px;
							}

		.ct-but {			cursor: pointer; color:#fff; 
							text-align: center; border-radius: 6px; display: inline-block; user-select: none;
							font-size: 12px; background-color: #27ae60; padding: 2px 8px 2px 8px; vertical-align:3px;
							}
		.ct-dialogTitle {	font-size: 20px; font-weight: bold; color: #000; margin-bottom: 8px; user-select: none;
							}
		.ct-actionBut {		cursor: pointer; color:#fff; 
							text-align: center; border-radius: 6px; display: inline-block; user-select: none;
							font-size: 12px; background-color: #27ae60; padding: 2px 8px 2px 8px; vertical-align:-3px;
							}
		.ct-popup {			display: none; position: absolute; padding: 3px 8px 3px 8px; border-radius: 6px;
							font-size: 11px; border: 1px solid #999; background-color: #eee;
							}
		
		.unselectable { 	-moz-user-select: none;     -khtml-user-select: none;
		   			 		-webkit-user-select: none;  -ms-user-select: none;   user-select: none;
		   				}
		.ui-dialog-buttonpane.ui-widget-content.ui-helper-clearfix { border:none }
		.ui-dialog { border-radius:6px; background-color:#eee }
		.ui-button { border-radius:30px;outline:none }
		.ui-dialog-titlebar { display:none }
		 table {			border-spacing: 0px; vertical-align:top}
		 input {		    vertical-align: -2px; }

</style>
</head>
<body>
	<div id="mainPanel" class="ct-mainPanel">
	<div style="text-align:center">
		<div style="float:right;line-height:13px;user-select:none;">
			<img id="scaleUp"   style="cursor:zoom-in;padding-bottom:2px;" src="img/upbut.gif"><br>
			<span id="scaleAmt">5</span><br>
			<img id="scaleDown" style="cursor:zoom-out" src="img/downbut.gif"><br>
		</div>
		<div class="unselectable">
			<img src="img/ctlogo32.png"><br>
			<b>Classroom Teaching Scan Timeline</b></div><br>
		</div>	
		<div style="text-align:right;font-size:12px;width:150px;float:left;margin-top:8px;padding-right:10px;line-height:20px;font-weight:bold;user-select:none;">
			<span style="color:#e74c3c;line-height:45px">Practice</span><br>
			<span style="color:#888">Student Actions</span><br><br>
			<span style="color:#e67e22" id="evt-0">OTR</span><br>
			<span style="color:#e67e22" id="evt-1">Feedback</span><br>
			<span style="color:#e67e22" id="evt-2">Questions</span><br>
			<span style="color:#e67e22" id="evt-3">Custom</span><br><br><br>
			<span style="color:#3db1ff;line-height:30px">Vocab or Topic</span><br><br><br>
			<span style="color:#27ae60" id="med-0">Diagram/Graphic/Map</span><br>
			<span style="color:#27ae60" id="med-1">Object/Manipulative</span><br>
			<span style="color:#27ae60" id="med-2">Graphic Organizer</span><br>
			<span style="color:#27ae60" id="med-3">Picture</span><br>
			<span style="color:#27ae60" id="med-4">Movie</span><br>
			<span style="color:#27ae60" id="med-5">Text</span><br>
			<span style="color:#999;font-size:10px;line-height:40px">100%</span><br>
			<span style="color:#666">Engagement</span><br>
			<span style="color:#999;font-size:10px;line-height:45px">0%</span><br>
			</div>
		<div id="timePanel" class="ct-timePanel">
		<svg id="svg" width="100%" height="99%"></svg>
		</div>
		<span style="float:right;color:#666">Help&nbsp;<a style="float:right" href="https://docs.google.com/document/d/19l87L5sZfLohU6rhQKLMERTNHhQr-jLiE4xQJeYN_3g/edit?usp=sharing" target="_blank">
			<img src="img/helpicon.gif" style="vertical-align:bottom" title="Show help"></a></span><br>
	</div>
	<div id="chartPanel" class="ct-chartPanel">
		<div class="ct-chart" id="chart1Chart"></div>
		<div class="ct-chart" id="chart2Chart"></div>
		<div class="ct-chart" id="chart3Chart"></div>
		<div class="ct-chart" id="chart4Chart"></div>
	</div>
	<div id="dataPanel" class="ct-dataPanel"></div>
	<div id="popup" class="ct-popup"></div>

<script>

//////////////////////////////////////////////////////////////////////////////////////////////////
// MAIN 
/////////////////////////////////////////////////////////////////////////////////////////////////

var curJson=null;															// Holds session results
var sessionNum=28;															// Session index
var obsEvents=null;															// Points at events
var maxTime=0;																// Size of timeline
var svgNS="http://www.w3.org/2000/svg";										// Name space
var menuFile="menus.txt";													// Memu filename
var scaleSpan=128;															// Scaling
var dataMedia=[];															// Holds media buttons											
var dataLabVals=[];															// Holds OTR button values											
var dataLabCats=[];															// Holds OTR button categories											
var dataActs=[];															// Holds media buttons											
var dataAcad=[];															// Holds academic diciplines
var menus=[];																// Holds menus
var butCts=[];																// Button counts

$(document).ready(function() {								           	// ON PAGE LOADED

	var url=window.location.search.substring(1);							// Get query string
	if (url) {																// If something	
		if (url.split("&")[0]) menuFile=url.split("&")[0];					// Get menu file
		if (!menuFile.match(/\.txt/))	menuFile+=".txt";					// Add ext if not there
		sessionNum=url.split("&")[1];										// Get session id
		}
	document.title+=" ("+sessionNum+")";									// Add id to title		
	
	$("#scaleDown").on("click", function(e) {								// SCALE DOWN
		if (scaleSpan < 16)													// At max
			return;															// Quit
		$("#scaleAmt").text($("#scaleAmt").text()-1);						// Show scale
		scaleSpan/=2;														// Show less
		Sound("click");														// Click sound
		Draw();																// Redraw
		});

	$("#scaleUp").on("click", function(e) {									// SCALE UP
		if (scaleSpan > 1024)												// At max
			return;															// Quit
		$("#scaleAmt").text($("#scaleAmt").text()-0+1);						// Show scale
		scaleSpan*=2;														// Show more
		Sound("click");														// Click sound
		Draw();																// Redraw
		});
	
	$.ajax({ type: "GET", url: "menus/"+menuFile, success: function(text) { // Get menus text tile
		var i,j,o,cp,cc,subs;
		text=text.replace(/\n\r/g,"\n");									// LFCR -> LF
		text=text.replace(/\r\n/g,"\n");									// CRLF -> LF
		text=text.replace(/\r/g,"");										// Remove CR
		var lines=text.split("\n");											// Spit by line
		for (i=0;i<lines.length;++i) {										// For each line
			o=lines[i];														// Point at line
			if (!o)	continue;												// Skip blanks
			if (o.match(/MEDIA=/i)) 										// Media button
				dataMedia=o.substr(6).split(",");							// Get options
			else if (o.match(/BUTVAL=/i)) 									// OTR button value
				dataLabVals=o.substr(7).split(",");							// Get options
			else if (o.match(/BUTLAB=/i)) 									// OTR button label
				dataLabs=o.substr(7).split(",");							// Get options
			else if (o.match(/BUTCAT=/i)) 									// OTR button category
				dataLabCats=o.substr(7).split(",");							// Get options
			else if (o.match(/STUACT=/i)) 									// Student actions
				dataActs=o.substr(7).split(",");							// Get options
			else if (o.match(/ACAD=/i)) 									// Disciplines
				dataAcad=o.substr(5).split(",");							// Get options
			else if (o.match(/:/)) {										// At new category
				cc=menus.length;											// Get index
				menus.push({});												// Add cat obj
				menus[cc].cname=o.substr(0,o.length-1);						// Add cat name
				menus[cc].prac=[];											// Add array for practices									
				}
			else if (o.match(/\*/)) {										// At new * category
				cp=menus[cc].prac.length;									// Get prac index
				menus[cc].prac.push({});									// Add practice obj
				menus[cc].prac[cp].pname=o.split(" *")[0];					// Add prac name
				menus[cc].prac[cp].subs=[];									// Add array for sub-practices									
				subs=o.split("&")[1].split(",");							// Get subs, if any
				for (j=0;j<subs.length;++j)									// For each sub
					if (subs[j].length)										// If something there
						menus[cc].prac[cp].subs.push(subs[j]);				// Add to practice
				}
			}
		for (i=0;i<dataMedia.length;++i)									// For each media
			$("#med-"+i).html(dataMedia[i]);								// Set label

		var v=[dataLabCats[0]];
		for (i=1;i<dataLabCats.length;++i)									// For each event category
			if (dataLabCats[i] != v[v.length-1]) 							// Get a unique one
				v.push(dataLabCats[i])										// Add to array
		dataLabCats=v;														// Copy array
		for (i=0;i<dataLabCats.length;++i)									// For each event category
			$("#evt-"+i).html(dataLabCats[i]);								// Set label
	
		Query("id = '"+sessionNum+"'", function(d) { 						// Send query
			if (!d || d == "null")											// No hits													
				return;;													// Quit
			curJson=$.parseJSON(d)[0];										// Objectify result
			Start();														// Start timeline
			google.charts.load('current', {'packages':['corechart']});		// Load chart library
			google.charts.setOnLoadCallback(DrawChart1);					// Draw chart 1
			google.charts.setOnLoadCallback(DrawChart2);					// Draw chart 2
			google.charts.setOnLoadCallback(DrawChart3);					// Draw chart 3
			google.charts.setOnLoadCallback(DrawChart4);					// Draw chart 4
			});
	}});																	// On menus loaded
	

});																			// On ready

	function Start()
	{
		var i;
		obsEvents=$.parseJSON(curJson.events);								// Objectify events
		for (i=0;i<dataLabVals.length;++i)									// For each event button
			butCts[dataLabVals[i]]=0;										// Null each one
		
		for (i=0;i<obsEvents.length;++i) {									// For each event
			if (obsEvents[i].time-0 > maxTime)								// If a longer time
				maxTime=obsEvents[i].time-0;								// Use it
			if (obsEvents[i].d1 == "Event") 								// An event
				butCts[obsEvents[i].d3]++;									// Add to count
			}
		Draw();
		ShowData();
		$("#mainPanel").animate({ opacity:1 },1500);						// Show timeline
		$("#chartPanel").animate({ opacity:1 },1500);						// Show charts
		$("#dataPanel").animate({ opacity:1 },1500);						// Show data
	}



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DRAW
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	function Draw()														// DRAW TIMELINE
	{
		var vpos=0;
		var x=8,y;
		var h=530;															
		var i,j,o,p,xs,ys,start,end,str;
		var mins=Math.ceil(maxTime/60);										// Number of minutes to show
		$("#timePanel").height(h);											// Set panel height
		var w=(mins*scaleSpan)+8;											// Width of timeline
		$("#svg").empty();													// Remove all segs
		document.getElementById('svg').setAttribute("width", (w+scaleSpan)+"px");	// Set SVG width	
		if (w > $("#timePanel").width())									// If no scroller
			h-=18;															// Reduce height
		for (i=0;i<5;++i) {													// For each engagement line
			y=i*16+425;														// Set height
			DrawLine([x,w],[y,y],"#ccc",.5);								// Draw it
			}
		ys=[5, h-23 ];														// Line ys
		DrawLine([x,w],[5,5],"#ccc",.5);									// Top line
		DrawLine([x,w],[55,55],"#ccc",.5);									// Actions separator
		DrawLine([x,w],[75,75],"#ccc",.5);									// OTR
		DrawLine([x,w],[195,195],"#ccc",.5);								// Vocab
		DrawLine([x,w],[275,275],"#ccc",.5);								// Media

		for (i=0;i<=mins;++i) {												// For each minute
			xs=[x,x];														// Xs
			DrawLine(xs,ys,"#ccc",.5);										// Draw minute tic
			DrawText(x,h-6,"#666",12,i,"middle");							// Label it
			x+=scaleSpan;													// Next pos
			}
		xs=[];	ys=[];														// Engagement line arrays
		o=obsEvents;														// Point at events
		if (!o)																// If no events loaded yet
			return;															// Quit
		for (i=0;i<o.length;++i) {											// For each event
			start=GetPixFromTime(o[i].time);								// Convert start to pixels
			end=GetPixFromTime((o[i].time-0)+(o[i].d5-0));					// End
			x=start+(end-start)/2;											// Center
			if (o[i].d2 == "Percent engaged") {								// Engagement	
				xs.push(GetPixFromTime(o[i].time));							// X pos
				ys.push((100-o[i].d3)/100*60+427);							// Y pos
				}
	
			else if (o[i].d1 == "Vocab Word") {								// Vocab	
				y=(vpos*19)+199;											// Position 									
				DrawBox(start,y,end,y+15,"#3db1ff","",0,8);					// Draw bar
				DrawText(x,y+11,"#fff",12,o[i].d2,"middle");				// Draw word
				vpos=(vpos+1)%4;											// Next pos
				}
			else if (o[i].d1 == "Practice") {								// Practice	
				DrawBox(start,5,end,489,"","#e74c3c",1,0);					// Draw box
				j=100;														// Assume full width
				if (end-start < 16)			j=0;							// Shrink if smaller box
				else if (end-start < 64)	j=5;
				else if (end-start < 128)	j=10;
				else if (end-start < 192)	j=20;
				DrawText(x,22,"#e74c3c",12,ShortenString(o[i].d2,j),"middle").setAttribute("font-weight","bold");
				str=o[i].d3+" ("+o[i].d4+"%)";								// Add % sub-practices completed
				p=DrawText(x,40,"#e74c3c",12,ShortenString(str,j),"middle")
				p.setAttribute("font-weight","normal");						// Normal
				p.setAttribute("id","pra-"+i);								// Id
				p.setAttribute("cursor","pointer");							// Pointer cursor
				$("#pra-"+i).on("click", function(e) { 						// On click
					var acts="";
					var i,j,str="";
					var curCat=0,curPrac=0;
					var id=e.target.id.substr(4)-0;							// Get id
					for (i=id+1;i<o.length;++i) {							// Look for subs
						if( o[i].d1 == "Practice")							// If into another practice
							break;											// Quit
						if (o[i].d1 == "Teacher actions")					// Found a sub
							acts+="|"+o[i].d4;								// Add to list		
						}
					for (j=0;j<menus.length;++j)							// For each category
						if (menus[j].cname == o[id].d2)						// A match
							curCat=j;								 		// Save index
					for (j=0;j<menus[curCat].prac.length;++j)				// For each practice
						if (menus[curCat].prac[j].pname == o[id].d3)		// A match
							curPrac=j;								 		// Save index
					for (j=0;j<menus[curCat].prac[curPrac].subs.length;++j){ // For each practice
						str+="<br><span style='color:";						// Add span
						if (acts.indexOf("|"+menus[curCat].prac[curPrac].subs[j]) != -1) // A match
							str+="#27ae60";									// Make it green
						else												// Not chosen
							str+="#999";									// Make it grey
						str+="'>"+menus[curCat].prac[curPrac].subs[j]+"</span>"; // Add and end span
						}
					ShowPopup(e.clientX+8,e.clientY+16,str.substr(4));		// Show popup
					});
	
				}
			else if (o[i].d1 == "Student actions") {						// Student actions	
				DrawBox(start,57,end,73,"#999","#fff",1.5,3);				// Draw bar
				DrawText(x,68,"#fff",12,o[i].d2,"middle");					// Draw action
				}
			else if (o[i].d1 == "Event") {									// Events	
				for (j=0;j<dataLabCats.length;++j)							// For each media type
					if (o[i].d2 == dataLabCats[j]) {						// Matches
						y=100+(j*20);										// Set pos
						break;												// Quit
						}
				p=DrawBox(start,y,start+8,y+8,"#e67e22","",0,8);			// Draw circle
				p.setAttribute("id","dot-"+i);								// Id
				p.setAttribute("cursor","pointer");							// Pointer cursor
				$("#dot-"+i).on("click", function(e) { 						// On click
					var id=e.target.id.substr(4);							// Get id
					ShowPopup(e.clientX+8,e.clientY+16,o[id].d3);			// Show popup
					});
				}
			else if (o[i].d1 == "Visual Aid") {								// Visual Aid	
				for (j=0;j<dataMedia.length;++j)							// For each media type
					if (o[i].d2 == dataMedia[j]) {							// Matches
						y=290+(j*20);										// Set pos
						DrawBox(start,y,end,y+5,"#27ae60","",0,5);			// Draw bar
						break;												// Quit
						}
				}
			}
		DrawLine(xs,ys,"#ccc",5).setAttribute("stroke-dasharray","5,5");	// Draw engagement line
	}

	function ShowData()													// SHOW DATA
	{
		var i,o;
		var str="<div style='display:inline-block;margin-right:32px;vertical-align:top'><table>"
		str+="<tr><td><b>Setting</b></td><td><b>Value</b><td></tr>";
		str+="<tr><td colspan='2'><hr></td></tr>";
		str+="<tr><td><b>Session Id</b></td><td>"+curJson.id+"</td></tr>";
		str+="<tr><td><b>Observer</b></td><td>"+curJson.obs+"</td></tr>";
		str+="<tr><td><b>Observer email&nbsp;&nbsp;</b></td><td>"+curJson.email+"</td></tr>";
		str+="<tr><td><b>Teacher Id</b></td><td>"+curJson.teacherId+"</td></tr>";
		str+="<tr><td><b>Grade</b></td><td>"+curJson.grade+"</td></tr>";
		str+="<tr><td><b>Subject</b></td><td>"+curJson.subject+"</td></tr>";
		str+="<tr><td><b>Date</b></td><td>"+curJson.date+"</td></tr>";
		str+="<tr><td><b>Block</b></td><td>"+curJson.block+"</td></tr>";
		str+="<tr><td><b>Setting</b></td><td>"+curJson.setting+"</td></tr>";
		str+="<tr><td><b>Video</b></td><td>"+curJson.video+"</td></tr>";
		str+="<tr><td><b>Reminder</b></td><td>"+curJson.remind+"</td></tr>";
		str+="<tr><td><b>Research</b></td><td>"+curJson.research+"</td></tr>";
		str+="<tr><td><b>Template</b></td><td>"+curJson.template+"</td></tr>";
			
		str+="</table></div>";
		str+="<div style='display:inline-block;margin-right:32px;vertical-align:top'><table>"
		str+="<tr><td><b>Event</b></td><td><b>(#)</b></td><td><b>#/M</b></td></tr>";
		str+="<tr><td colspan='5'><hr></td></tr>";
		for (i=0;i<dataLabVals.length;++i) {								// For each event button
			str+="<tr><td><b>"+dataLabVals[i]+"&nbsp;&nbsp;</b></td>";		// Label
			str+="<td>("+butCts[dataLabVals[i]]+")&nbsp;&nbsp</td>";		// Count
			str+="<td  style='text-align:right'>"+(butCts[dataLabVals[i]]/maxTime*60).toFixed(1)+"</td></tr>";	// Counts per minute
			}
		
		str+="</table></div>";
		str+="<div style='display:inline-block;vertical-align:top'><table>"
		str+="<tr><td><b>Vocabulary Practices</b></td><td><b>Time&nbsp;&nbsp;</b></td><td><b>Markers used&nbsp;&nbsp;</td><td></b><b>Total</b></td></tr>";
		str+="<tr><td colspan='4'><hr></td></tr>";
		var all=0, c=0;
		for (i=0;i<obsEvents.length;++i) {									// For each event
			o=obsEvents[i];													// Point at event
			if ((o.d1 == "Practice") && (o.d2 == "Vocabulary Instruction")) {	// If a vocab practice
				str+="<tr><td><b>"+o.d3+"&nbsp;&nbsp;</b></td>";			// Label
				str+="<td>"+Math.floor(o.d5/60)+":"+(o.d5%60);				// Time
				str+="</td><td  style='text-align:center'>"+o.d4+"%";		// Pct marker
				str+="</td><td  style='text-align:right'>"+Math.round(o.d5/maxTime*100)+"%</td></tr>";// Pct of total
				if (o.d4 == 100)	all+=(o.d5-0)							// If all used, add to all count
				++c;
				}
			}
		str+="<tr><td colspan='4'><hr></td></tr>";
		str+="<tr><td><b>Total vocabulary practices used</b></td>";			// # vocabs
		str+="<td>"+c+"&nbsp;&nbsp</td></tr>";								// #
		str+="<tr><td><b>Total time when all markers were used&nbsp;&nbsp;</b></td>";		// All 100%ers
		str+="<td>"+Math.floor(all/60)+":"+(all%60)+"&nbsp;&nbsp</td></tr>";		// time
		$("#dataPanel").append(str);										// Add to panel	
	}									

	function GetPixFromTime(time)											// GET TIMELINE POSITION FROM TIME
	{
		return (time-0)*scaleSpan/60+8;												// Get pixels
	}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SVG
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	function DrawLine(x, y, col, wid) 									// DRAW SVG LINE
	{
		var i;
		var o=document.createElementNS(svgNS,"path");						// Create element
		var str="M"+x[0]+" "+y[0];											// Start
		for (i=1;i<x.length;++i) {											// For each coord
			str+="L";														// Line to
			str+=x[i]+",";													// Pos x
			str+=y[i]+" ";													// Pos y
			}
		o.setAttribute("d",str);											// Add coords to line
		o.setAttribute("stroke-width",wid+"px");							// Stroke width 
		o.style.fill="none";												// No fill	
		o.style.stroke=col;  												// Stroke color
		svg.appendChild(o);													// Add element to DOM
		return o;															// Return pointer to element
}

	function DrawText(x, y, col, size, text, align) 					// DRAW SVG TEXT
	{
		var o=document.createElementNS(svgNS,"text");						// Create element
		o.setAttribute("x",x);												// X
		o.setAttribute("y",y);												// Y
		o.setAttribute("fill",col);											// Col
		o.setAttribute("font-size",size);									// Size
		o.setAttribute("font-family","sans-serif");							// Font
		if (align)															// If aligning
			o.setAttribute("text-anchor",align);							// Align
		svg.appendChild(o);													// Add element to DOM
		$(o).css("user-select","none");										// No select
		$(o).text(text);													// Text
		return o;															// Return pointer to element
		}

	function DrawBox(x1, y1, x2, y2, col, ecol, ewid, rad) 				// DRAW SVG BOX
	{
		var o=document.createElementNS(svgNS,"rect");						// Create element
		o.setAttribute("height",Math.abs(y2-y1));							// Height
		o.setAttribute("width",Math.abs(x2-x1));							// Width
		o.setAttribute("x",x1);												// X
		o.setAttribute("y",y1);												// Y
		if (rad) {															// If rounded
			o.setAttribute("rx",rad);										// Set X radius
			o.setAttribute("ry",rad);										// Y
			}
		if (ewid) {															// If an edge
			o.style.stroke=ecol;  											// Stroke color
			o.setAttribute("stroke-width",ewid+"px");						// Stroke width 
			}
		else																// No edge
			o.style.stroke="none";											// No stroke	
		if (col) 															// If a fill color
			o.style.fill=col;  												// Fill color
		else																// No color
			o.style.fill="none";											// No fill	
		svg.appendChild(o);													// Add element to DOM
		return o;															// Return pointer to element
	}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CHARTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


    function DrawChart1() 												// DRAW CHART 1
	{
		var i,d=[];
		var w=$("#chart1Chart").width()+50;
		var data=new google.visualization.DataTable();						// Make new table
		data.addColumn('string', 'Label');									// Add label column
 		data.addColumn('number', 'Time');									// Add time
		for (i=0;i<obsEvents.length;++i) 									// For each event
			if (obsEvents[i].d1 == "Practice")								// If a practice
				d.push([ obsEvents[i].d3, obsEvents[i].d5-0]);				// Add slice								
		data.addRows(d);													// Add data
  		var options={width: w, is3D: true,									// Set options
		 			 title: "Teacher Time",									// Title
					 titleTextStyle: { "fontSize": 12, color:"#666" }, 		// Title format
					 chartArea:{left:"0%",top:"10%", width:"75%",height:"75%"}	//  Sizing
		  			};
		new google.visualization.PieChart(document.getElementById('chart1Chart')).draw(data,options);
      }

  function DrawChart2() 												// DRAW CHART 2
	{
		var i,d=[];
		var w=$("#chart1Chart").width()+50;
		var data=new google.visualization.DataTable();						// Make new table
		data.addColumn('string', 'Label');									// Add label column
 		data.addColumn('number', 'Time');									// Add time
		for (i=0;i<obsEvents.length;++i) 									// For each event
			if (obsEvents[i].d1 == "Student actions")						// If a student action
				d.push([ obsEvents[i].d2, obsEvents[i].d5-0 ]);				// Add slice								
		data.addRows(d);													// Add data
  		var options={width: w, is3D: true, 									// Set options
		 			 title: "Student Time",									// Title
					 titleTextStyle: { "fontSize": 12, color:"#666" }, 		// Title format
					 chartArea:{left:"0%",top:"10%", width:"75%",height:"75%"}	//  Sizing
		  			};
		new google.visualization.PieChart(document.getElementById('chart2Chart')).draw(data,options);
      }

	function DrawChart3() 												// DRAW CHART 3
	{
		var i,d=[];
		var w=$("#chart1Chart").width()+50;
		var data=new google.visualization.DataTable();						// Make new table
		data.addColumn('string', 'Label');									// Add label column
 		data.addColumn('number', 'Time');									// Add time
		for (i=0;i<obsEvents.length;++i) 									// For each event
			if (obsEvents[i].d1 == "Vocab Word")							// If a vocab
				d.push([ obsEvents[i].d2, obsEvents[i].d5-0 ]);				// Add slice								
		data.addRows(d);													// Add data
  		var options={width: w, is3D: true, 									// Set options
		 			 title: "Vocabulary/Topic Terms ",						// Title
					 titleTextStyle: { "fontSize": 12, color:"#666" }, 		// Title format
					 chartArea:{left:"0%",top:"10%", width:"75%",height:"75%"}	//  Sizing
		  			};
		new google.visualization.PieChart(document.getElementById('chart3Chart')).draw(data,options);
      }

	function DrawChart4() 												// DRAW CHART 4
	{
		var i,d=[];
		var w=$("#chart1Chart").width()+50;
		var data=new google.visualization.DataTable();					// Make new table
		data.addColumn('string', 'Label');									// Add label column
 		data.addColumn('number', 'Time');									// Add time
		for (i=0;i<obsEvents.length;++i) 									// For each event
			if (obsEvents[i].d2 == "Model")									// If a model
				d.push([ obsEvents[i].d3, obsEvents[i].d5-0 ]);				// Add slice								
		data.addRows(d);													// Add data
  		var options={width: w, is3D: true, 									// Set options
		 			 title: "Co-teaching Model ",							// Title
					 titleTextStyle: { "fontSize": 12, color:"#666" }, 		// Title format
					 chartArea:{left:"0%",top:"10%", width:"75%",height:"75%"}	//  Sizing
	  			};
		new google.visualization.PieChart(document.getElementById('chart4Chart')).draw(data,options);
	}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// HELPERS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	function ShowPopup(x, y, msg)										// SHOW A POPUP
	{
		if (!msg)															// Nothing to show
			return;															// Quit
		$("#popup").css({left:x,top:y});									// Position
		$("#popup").html(msg);												// Add text										
		$("#popup").show();													// Show it
		$("#popup").delay(4000).fadeOut(400);								// Close after 4 seconds
		}

	function Query(query, callback) 
	{
		var dat={ q:query.replace(/'/g,"~") };
		var url="//classroomteachingscan.com/ctscan/query.php";				// Target
		$.ajax({ url:url,dataType:'text',type:"GET",crossDomain:true,data:dat,  // Get data
			success:function(d) { callback(d) },							// Run callback				
			error:function(xhr,status,error) { trace(error) },				// Show error
			});		
	}
		
	function ShortenString(str, len)									// SHORTEN A STRING TO LENGTH
	{
		if (!len)															// No length
			return "";														// Return null
		if (str && str.length > len)										// Too long
			str=str.substr(0,(len-3)/2)+"..."+str.slice((len-3)/-2);		// Shorten	
		return str;															// Return string
	}

	function trace(msg, p1, p2, p3, p4)										// CONSOLE 
	{
		if (p4 != undefined)
			console.log(msg,p1,p2,p3,p4);
		else if (p3 != undefined)
			console.log(msg,p1,p2,p3);
		else if (p2 != undefined)
			console.log(msg,p1,p2);
		else if (p1 != undefined)
			console.log(msg,p1);
		else
			console.log(msg);
	}

	function Sound(sound, mute)												// PLAY SOUND
	{
		var snd=new Audio();													// Init audio object
		if (!snd.canPlayType("audio/mpeg") || (snd.canPlayType("audio/mpeg") == "maybe")) 
			snd=new Audio("img/"+sound+".ogg");									// Use ogg
		else	
			snd=new Audio("img/"+sound+".mp3");									// Use mp3
		if (!mute)	{															// If not initing or muting	
			snd.volume=50/100;													// Set volume
			snd.play();															// Play it
			}
		}
	
</script>
</body>
</html>
